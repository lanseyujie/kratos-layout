syntax = "proto3";

package kratos.app.sns.conf;

import "google/protobuf/duration.proto";
import "validate/validate.proto";

option go_package = "app/post/internal/conf;conf";


message Bootstrap {
  App app = 1 [(validate.rules).message.required = true];
  Trace trace = 2 [(validate.rules).message.required = true];
  Server server = 3 [(validate.rules).message.required = true];
  Data data = 4 [(validate.rules).message.required = true];
  Registry registry = 5 [(validate.rules).message.required = true];
  Auth auth = 6 [(validate.rules).message.required = true];
}

message App {
  string name = 1 [(validate.rules).string.ignore_empty = false];
  // Semantic Versioning 2.0.0
  // https://semver.org/lang/zh-CN/
  // https://regex101.com/r/Ly7O1x/3/
  string version = 2 [(validate.rules).string.pattern = "^(?P<major>0|[1-9]\\d*)\\.(?P<minor>0|[1-9]\\d*)\\.(?P<patch>0|[1-9]\\d*)(?:-(?P<prerelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"];
  string id = 3;
  map<string, string> metadata = 4;
}

message Trace {
  // report endpoint url.
  string http_endpoint = 1;
  // sample ratio.
  double sample_ratio = 2;
  // authentication with the collector endpoint.
  string username = 3;
  // authentication with the collector endpoint.
  string password = 4;
}

message Server {
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }

  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }

  GRPC grpc = 1 [(validate.rules).message.required = true];
  HTTP http = 2 [(validate.rules).message.required = true];
}

message Data {
  message Ent {
    message Migration {
      bool drop_index = 1;
      bool drop_column = 2;
      bool foreign_keys = 3;
    }

    string driver = 1 [(validate.rules).string.ignore_empty = false];
    string dsn = 2 [(validate.rules).string.ignore_empty = false];
    int32 pool_size = 3;
    int32 idle_size = 4;
    google.protobuf.Duration idle_time = 5;
    google.protobuf.Duration life_time = 6;
    Migration migration = 7;
    bool debug = 8;
  }

  message Redis {
    string addr = 1 [(validate.rules).string.ignore_empty = false];
    string username = 2;
    string password = 3;
    uint64 pool_size = 4;
    int32 db = 5;
    google.protobuf.Duration dial_timeout = 6;
    google.protobuf.Duration read_timeout = 7;
    google.protobuf.Duration write_timeout = 8;
    bool debug = 9;
  }

  Ent ent = 1 [(validate.rules).message.required = true];
  Redis redis = 2 [(validate.rules).message.required = true];
}

message Registry {
  message Consul {
    string address = 1 [(validate.rules).string.ignore_empty = false];
    string scheme = 2;
    string token = 3;
  }

  Consul consul = 1 [(validate.rules).message.required = true];
}

message Auth {
  string key = 1;
  map<string, string> claims = 2;
}

